-- ESP Module
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

local BOX_COLOR = Color3.fromRGB(255, 0, 0) 
local BOX_THICKNESS = 2
local SCALE_CONST = 2000

local boxes = {}
local connection

local function newBox()
    local box = Drawing.new("Square")
    box.Visible = false
    box.Color = BOX_COLOR
    box.Thickness = BOX_THICKNESS
    box.Filled = false
    return box
end

local function getBox(plr)
    boxes[plr] = boxes[plr] or newBox()
    return boxes[plr]
end

local function clamp(v, mi, ma)
    return v < mi and mi or (v > ma and ma or v)
end

local function addPlayer(plr)
    if plr ~= Players.LocalPlayer and not boxes[plr] then
        boxes[plr] = newBox()
    end
end

local function removePlayer(plr)
    if boxes[plr] then
        boxes[plr]:Remove()
        boxes[plr] = nil
    end
end

local function renderESP()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= Players.LocalPlayer then
            local char = plr.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            local box = getBox(plr)
            if hrp and Camera then
                local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                if onScreen then
                    local dist = (Camera.CFrame.Position - hrp.Position).Magnitude
                    local width = clamp(SCALE_CONST / dist, 50, 500)
                    local height = clamp(width * 2, 100, 1000)
                    box.Size = Vector2.new(width, height)
                    box.Position = Vector2.new(screenPos.X - width / 2, screenPos.Y - height / 2)
                    box.Visible = true
                else
                    box.Visible = false
                end
            else
                box.Visible = false
            end
        end
    end
end

local function Enable()
    for _, plr in ipairs(Players:GetPlayers()) do
        addPlayer(plr)
    end
    Players.PlayerAdded:Connect(addPlayer)
    Players.PlayerRemoving:Connect(removePlayer)
    connection = RunService.RenderStepped:Connect(renderESP)
end

local function Disable()
    if connection then
        connection:Disconnect()
        connection = nil
    end
    for _, box in pairs(boxes) do
        box:Remove()
    end
    boxes = {}
end

local function SetColor(color)
    BOX_COLOR = color
    for _, box in pairs(boxes) do
        box.Color = BOX_COLOR
    end
end


return {
    Enable = Enable,
    Disable = Disable,
    SetColor = SetColor
}
